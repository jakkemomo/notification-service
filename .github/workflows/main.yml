# This is a basic workflow to help you get started with Actions

name: Python application

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    name: Linters, Typecheckers, Formatters
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set up lxml libraries for reporting
      id: report_dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y libxml2-dev libxslt-dev python3-dev gcc python-lxml

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt

    - name: Refactor with pyupgrade
      id: pyupgrade
      run: |
        pyupgrade

    - name: Refactor with isort
      id: isort
      run: |
        isort .

    - name: wemake-python-styleguide
      id: flake8
      run: flake8 .

    - name: Check types
      id: mypy
      run: |
        mypy .

    - name: Archive code coverage results
      id: reports
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage-report
        path: .github/reports

    - name: Send result to telegram
      if: always()
      run: |
        echo '${{ toJson(steps) }}' >> steps.json
        python telegram_message.py
      env:
        BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
        CHAT_ID: ${{ secrets.CHAT_ID }}
